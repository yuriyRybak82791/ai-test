{"version":3,"file":"css/block-latest-news.css","mappings":"AAMI,iBACI,aAAc,CAEd,WAAY,CACZ,iBAAkB,CAFlB,UCHR,CDMQ,wBAKI,+DAJA,WACA,aAAc,CAEd,WAAY,CAIZ,iBAAkB,CAFlB,yDAAyB,CAHzB,UAAW,CAIX,UCHZ,CDOI,oCAMI,oBAAqB,CAJrB,aAAc,CAEd,WAAY,CACZ,oCAAiB,CAFjB,UCHR,CDQI,oBAII,yBACA,QAAS,CAFT,YAAa,CACb,uBAAwB,CAHxB,iBAAkB,CAKlB,UAAW,CAJX,UCFR,CC8BQ,yBF9BJ,oBAQQ,kDCJV,CACF,CDKQ,0BAGI,qTAAsjB,CACtjB,uBAA2B,CAC3B,2BAA4B,CAK5B,WAAY,CATZ,WACA,aAAc,CAKd,UAAW,CAEX,SAAU,CADV,iBAAkB,CAFlB,UCCZ,CCaQ,yBFpBA,0BAYQ,WAAY,CACZ,SCDd,CACF,CDII,qBACI,UGrDA,CH0DA,aAAc,CAHd,cAAe,CAEf,eAAgB,CADhB,gBAAiB,CAFjB,iBCER,CCDQ,yBFHJ,qBAQQ,cCAV,CACF,CDEI,iBAMI,oBAAqB,CACrB,2BAA4B,CAN5B,UGhEA,CHoEA,mBAAoB,CAHpB,cAAe,CAEf,eAAgB,CADhB,gBAAiB,CAKjB,eCAR,CAtEA,aACI,kBAAmB,CACnB,eAwEJ,CCpBQ,yBDtDR,aAIQ,kBAAmB,CACnB,eA0EN,CACF,CAzEI,wBACI,iBA2ER,CAxEQ,qBACI,eA0EZ,CAzEY,sCACI,kBA2EhB,CAvEI,sBACI,YAAa,CACb,OAyER,CCvCQ,yBDpCJ,sBAIQ,OAAQ,CACR,mCA2EV,CACF,CC7CQ,yBDpCJ,sBAQQ,OAAQ,CACR,mCA6EV,CACF","sources":["webpack://wp-webpack-workflow/./src/scss/parts/_post-card.scss","webpack://wp-webpack-workflow/./src/scss/acf-blocks/block-latest-news.scss","webpack://wp-webpack-workflow/./src/scss/bootstrap/mixins/_breakpoints.scss","webpack://wp-webpack-workflow/./src/scss/parts/_variables.scss"],"sourcesContent":["@import \"../bootstrap/variables\";\n@import \"../bootstrap/mixins\";\n@import \"../parts/variables\";\n@import \"../parts/mixin\";\n\n.post-card{\n    &__link{\n        display: block;\n        width: 100%;\n        height: auto;\n        position: relative;\n        &::before{\n            content: '';\n            display: block;\n            width: 100%;\n            height: 100%;\n            background: linear-gradient(0deg, rgba(0, 0, 0, 0.60) 0%, rgba(0, 0, 0, 0.60) 100%);\n            transform: rotate(180deg);\n            z-index: 10;\n            position: absolute;\n        }\n    }\n    &__video,\n    &__image{\n        display: block;\n        width: 100%;\n        height: auto;\n        object-fit: cover;\n        aspect-ratio: 408/240;\n    }\n    &__content{\n        position: absolute;\n        z-index: 20;\n        padding: 18px;\n        padding-inline-end: 96px; \n        bottom: 0;\n        width: 100%;\n        @include media-breakpoint-up(lg){\n            padding-inline-end: 106px; \n        }\n        &::after{\n            content: '';\n            display: block;\n            background-image: url(\"data:image/svg+xml,%3Csvg width='42' height='8' viewBox='0 0 42 8' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M0.647156 3.36495C0.451893 3.56021 0.451893 3.8768 0.647156 4.07206L3.82914 7.25404C4.0244 7.4493 4.34098 7.4493 4.53624 7.25404C4.73151 7.05878 4.73151 6.7422 4.53624 6.54693L1.70782 3.71851L4.53624 0.890079C4.73151 0.694817 4.73151 0.378234 4.53624 0.182972C4.34098 -0.0122902 4.0244 -0.0122902 3.82914 0.182972L0.647156 3.36495ZM42 3.21851L1.00071 3.21851V4.21851L42 4.21851V3.21851Z' fill='white'/%3E%3C/svg%3E\");\n            background-position: center;\n            background-repeat: no-repeat;\n            width: 42px;\n            height: 8px;\n            position: absolute;\n            left: 18px;\n            bottom: 14px;\n            @include media-breakpoint-up(lg){\n                bottom: 16px; \n                left: 26px;\n            }            \n        }\n    }\n    &__category{\n        color: $white;\n        margin-bottom: 4px;\n        font-size: 15px;\n        line-height: 17px;\n        font-weight: 600;\n        display: block;\n        @include media-breakpoint-up(lg){\n            font-size: 16px;\n        }\n    }\n    &__name{\n        color: $white;\n        font-size: 25px;\n        line-height: 22px;\n        font-weight: 600;\n        display: -webkit-box;\n        -webkit-line-clamp: 4;\n        -webkit-box-orient: vertical;\n        overflow: hidden;\n        @include media-breakpoint-up(lg){\n\n        }\n    }\n}\n","@import \"../bootstrap/variables\";\n@import \"../bootstrap/mixins\";\n@import \"../parts/variables\";\n@import \"../parts/mixin\";\n@import \"../parts/post-card\";\n\n.latest-news{\n    margin-bottom: 60px;\n    margin-top: 60px;\n    @include media-breakpoint-up(lg){\n        margin-bottom: 80px;\n        margin-top: 80px;\n    }\n    .not-found{\n        text-align: center;\n    }\n    &__text{\n        p{\n            margin-bottom: 0;\n            &:not(:last-child){\n                margin-bottom: 10px;\n            }\n        }\n    }\n    &__wrapper{\n        display: grid;\n        gap: 6px;\n        @include media-breakpoint-up(md){\n            gap: 8px;\n            grid-template-columns: repeat(2, 1fr);\n        }\n        @include media-breakpoint-up(lg){\n            gap: 8px;\n            grid-template-columns: repeat(3, 1fr);\n        } \n    }\n}\n","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n    $n: index($breakpoint-names, $name);\n    @return if($n != null and $n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n    $min: map-get($breakpoints, $name);\n    @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\n// The maximum value is calculated as the minimum of the next one less 0.02px\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n    $next: breakpoint-next($name, $breakpoints);\n    @return if($next, breakpoint-min($next, $breakpoints) - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n    @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n    $min: breakpoint-min($name, $breakpoints);\n    @if $min {\n        @media (min-width: $min) {\n            @content;\n        }\n    } @else {\n        @content;\n    }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n    $max: breakpoint-max($name, $breakpoints);\n    @if $max {\n        @media (max-width: $max) {\n            @content;\n        }\n    } @else {\n        @content;\n    }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n    $min: breakpoint-min($lower, $breakpoints);\n    $max: breakpoint-max($upper, $breakpoints);\n\n    @if $min != null and $max != null {\n        @media (min-width: $min) and (max-width: $max) {\n            @content;\n        }\n    } @else if $max == null {\n        @include media-breakpoint-up($lower, $breakpoints) {\n            @content;\n        }\n    } @else if $min == null {\n        @include media-breakpoint-down($upper, $breakpoints) {\n            @content;\n        }\n    }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n    $min: breakpoint-min($name, $breakpoints);\n    $max: breakpoint-max($name, $breakpoints);\n\n    @if $min != null and $max != null {\n        @media (min-width: $min) and (max-width: $max) {\n            @content;\n        }\n    } @else if $max == null {\n        @include media-breakpoint-up($name, $breakpoints) {\n            @content;\n        }\n    } @else if $min == null {\n        @include media-breakpoint-down($name, $breakpoints) {\n            @content;\n        }\n    }\n}\n","// Font-family\r\n$font-primary: RagSans;\r\n$font-secondary: RAG-Marom-Poster;\r\n\r\n// Colors\r\n$white: #FFFFFF;\r\n$black: #000000;\r\n$color-main: $black;\r\n$color-lighter: #6F6F6F;\r\n$color-gray: #D3D3D3;\r\n$color-light-pink: #FFDEDE;\r\n$color-dark-gray: #888888;\r\n$color-brightest: #B8B8B8;\r\n$color-red: #FF0E0E;\r\n$color-brand: #FF1521;\r\n$color-brand-lighter: #FFE6E6;\r\n$color-light-red-2: #FFB5B9;\r\n$color-brand-dark: #6D052A;\r\n$color-burgundy: #800029;\r\n$color-dark: #3F0417;\r\n\r\n// h1 styles\r\n$h1-font-size: 160px;\r\n$h1-line-height: 160px;\r\n\r\n// h2 styles\r\n$h2-font-size: 100px;\r\n$h2-line-height: 100px;\r\n\r\n// h3 styles\r\n$h3-font-size: 50px;\r\n$h3-line-height: 50px;\r\n\r\n// h4 styles\r\n$h4-font-size: 40px;\r\n$h4-line-height: 40px;\r\n\r\n// h5 styles\r\n$h5-font-size: 36px;\r\n$h5-line-height: 36px;\r\n\r\n// h6 styles\r\n$h6-font-size: 32px;\r\n$h6-line-height: 32px;\r\n\r\n$fluid_max_width: 1440px;\r\n"],"names":[],"sourceRoot":""}