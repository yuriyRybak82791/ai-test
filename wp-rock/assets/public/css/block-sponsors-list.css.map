{"version":3,"file":"css/block-sponsors-list.css","mappings":"AAKA,eACI,kBAAmB,CACnB,eAJJ,CCyDQ,yBDvDR,eAKQ,kBAAmB,CADnB,eADN,CACF,CAGI,wBACI,YAAa,CAEb,QAAS,CADT,mCAAR,CC8CQ,yBDhDJ,wBAMQ,QAAS,CADT,mCAEV,CACF,CACI,qBAOI,sBAGA,wCAAmB,CATnB,qBEjBA,CFkBA,iBAAkB,CAClB,2DAEA,gCAAa,CACb,+CAAsB,CAGtB,QAAS,CADT,WAAY,CADZ,6BAA8B,CAH9B,iBAAkB,CAOlB,iBACR,CC2BQ,yBDvCJ,qBAaQ,kBAAmB,CACnB,uCAEA,QAAS,CADT,YAIV,CACF,CAFQ,kCAOI,qBACA,wCAAmB,CAFnB,gCAAa,CAHb,YAAa,CAIb,sBAAuB,CAFvB,iBAAkB,CAIlB,gBAAiB,CACjB,iBAAkB,CATlB,eAAgB,CAGhB,iBAAkB,CAFlB,UAYZ,CCOQ,yBDrBA,kCAaQ,YAAa,CAEb,kBAAmB,CAHnB,eAAgB,CAEhB,YAOd,CACF,CAJQ,0BACI,aAAc,CAEd,WAAY,CACZ,eAAgB,CAFhB,cAAe,CAGf,wCAMZ,CAJQ,+DAEI,gBAAiB,CACjB,iBAAkB,CAGlB,eAAgB,CAFhB,gBAAiB,CACjB,iBAMZ,CAHQ,0BACI,mBExEG,CF2EH,cAAe,CAFf,eAAgB,CAGhB,aAAc,CAFd,iBAOZ,CCtBQ,yBDYA,0BAQQ,cAAe,CADf,kBAQd,CACF,CALQ,0BACI,eAOZ,CALQ,0BAII,aEzEO,CFsEP,cAAe,CAEf,eAAgB,CADhB,gBAAiB,CAGjB,2BAOZ,CANY,gCACI,aAQhB,CCzCQ,yBD0BA,0BAUQ,cAAe,CACf,gBASd,CACF","sources":["webpack://wp-webpack-workflow/./src/scss/acf-blocks/block-sponsors-list.scss","webpack://wp-webpack-workflow/./src/scss/bootstrap/mixins/_breakpoints.scss","webpack://wp-webpack-workflow/./src/scss/parts/_variables.scss"],"sourcesContent":["@import \"../bootstrap/variables\";\n@import \"../bootstrap/mixins\";\n@import \"../parts/variables\";\n@import \"../parts/mixin\";\n\n.sponsors-list{\n    margin-bottom: 78px;\n    margin-top: 20px;\n    @include media-breakpoint-up(lg){\n        margin-top: 95px;\n        margin-bottom: 95px;\n    }\n    &__wrapper{\n        display: grid;\n        grid-template-columns: repeat(2, 1fr);\n        gap: 10px;\n        @include media-breakpoint-up(md){\n            grid-template-columns: repeat(3, 1fr);\n            gap: 20px;\n        }\n    }\n    &__card{\n        background-color: $white;\n        border-radius: 6px;\n        box-shadow: 0px 2.1662468910217285px 15.163728713989258px 0px rgba(0, 0, 0, 0.10);\n        padding: 15px 10px;\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n        height: 100%;\n        gap: 10px;\n        align-items: center;\n        text-align: center;\n        @include media-breakpoint-up(lg){\n            border-radius: 10px;\n            box-shadow: 0px 4px 28px 0px rgba(0, 0, 0, 0.10);\n            padding: 32px;\n            gap: 28px;\n        }\n        &-logo-wrapper{\n            max-width: 155px;\n            width: 100%;\n            height: 100px;\n            padding: 10px 15px;\n            margin-bottom: 6px;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            margin-left: auto;\n            margin-right: auto;\n            @include media-breakpoint-up(lg){\n                max-width: 248px;\n                height: 160px;\n                padding: 15px;\n                margin-bottom: 20px;\n            }\n        }\n        &-logo{\n            display: block;\n            max-width: 100%;\n            height: auto;\n            max-height: 100%;\n            object-fit: contain;\n        }\n        &-content,\n        &-link-wrapper{ \n            margin-left: auto;\n            margin-right: auto;\n            padding-left: 7px;\n            padding-right: 7px;\n            max-width: 288px;\n        }\n        &-name{\n            font-family: $font-primary;\n            font-weight: 600;\n            margin-bottom: 8px;\n            font-size: 16px;\n            line-height: 1;\n            @include media-breakpoint-up(md){\n                margin-bottom: 16px;\n                font-size: 35px;\n            }\n        }\n        &-text{\n            margin-bottom: 0;\n        }\n        &-link{\n            font-size: 16px;\n            line-height: 24px;\n            font-weight: 600;\n            color: $color-brand-dark;\n            transition: color .3s linear;\n            &:hover{\n                color: $color-brand;\n            }\n            @include media-breakpoint-up(md){\n                font-size: 18px;\n                line-height: 26px;\n            }\n        }\n    }\n}\n","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n    $n: index($breakpoint-names, $name);\n    @return if($n != null and $n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n    $min: map-get($breakpoints, $name);\n    @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\n// The maximum value is calculated as the minimum of the next one less 0.02px\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n    $next: breakpoint-next($name, $breakpoints);\n    @return if($next, breakpoint-min($next, $breakpoints) - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n    @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n    $min: breakpoint-min($name, $breakpoints);\n    @if $min {\n        @media (min-width: $min) {\n            @content;\n        }\n    } @else {\n        @content;\n    }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n    $max: breakpoint-max($name, $breakpoints);\n    @if $max {\n        @media (max-width: $max) {\n            @content;\n        }\n    } @else {\n        @content;\n    }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n    $min: breakpoint-min($lower, $breakpoints);\n    $max: breakpoint-max($upper, $breakpoints);\n\n    @if $min != null and $max != null {\n        @media (min-width: $min) and (max-width: $max) {\n            @content;\n        }\n    } @else if $max == null {\n        @include media-breakpoint-up($lower, $breakpoints) {\n            @content;\n        }\n    } @else if $min == null {\n        @include media-breakpoint-down($upper, $breakpoints) {\n            @content;\n        }\n    }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n    $min: breakpoint-min($name, $breakpoints);\n    $max: breakpoint-max($name, $breakpoints);\n\n    @if $min != null and $max != null {\n        @media (min-width: $min) and (max-width: $max) {\n            @content;\n        }\n    } @else if $max == null {\n        @include media-breakpoint-up($name, $breakpoints) {\n            @content;\n        }\n    } @else if $min == null {\n        @include media-breakpoint-down($name, $breakpoints) {\n            @content;\n        }\n    }\n}\n","// Font-family\r\n$font-primary: RagSans;\r\n$font-secondary: RAG-Marom-Poster;\r\n\r\n// Colors\r\n$white: #FFFFFF;\r\n$black: #000000;\r\n$color-main: $black;\r\n$color-lighter: #6F6F6F;\r\n$color-gray: #D3D3D3;\r\n$color-light-pink: #FFDEDE;\r\n$color-dark-gray: #888888;\r\n$color-brightest: #B8B8B8;\r\n$color-red: #FF0E0E;\r\n$color-brand: #FF1521;\r\n$color-brand-lighter: #FFE6E6;\r\n$color-light-red-2: #FFB5B9;\r\n$color-brand-dark: #6D052A;\r\n$color-burgundy: #800029;\r\n$color-dark: #3F0417;\r\n\r\n// h1 styles\r\n$h1-font-size: 160px;\r\n$h1-line-height: 160px;\r\n\r\n// h2 styles\r\n$h2-font-size: 100px;\r\n$h2-line-height: 100px;\r\n\r\n// h3 styles\r\n$h3-font-size: 50px;\r\n$h3-line-height: 50px;\r\n\r\n// h4 styles\r\n$h4-font-size: 40px;\r\n$h4-line-height: 40px;\r\n\r\n// h5 styles\r\n$h5-font-size: 36px;\r\n$h5-line-height: 36px;\r\n\r\n// h6 styles\r\n$h6-font-size: 32px;\r\n$h6-line-height: 32px;\r\n\r\n$fluid_max_width: 1440px;\r\n"],"names":[],"sourceRoot":""}