{"version":3,"file":"css/block-cta-section.css","mappings":"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","sources":["webpack://wp-webpack-workflow/./src/scss/acf-blocks/block-cta-section.scss","webpack://wp-webpack-workflow/./src/scss/bootstrap/mixins/_breakpoints.scss","webpack://wp-webpack-workflow/./src/scss/parts/_variables.scss"],"sourcesContent":["@use \"sass:map\";\n\n@import \"../bootstrap/variables\";\n@import \"../bootstrap/mixins\";\n@import \"../parts/variables\";\n@import \"../parts/mixin\";\n\n.cta-section {\n    overflow: hidden;\n    @include media-breakpoint-up(lg) {\n        padding: 65px 0;\n    }\n\n    &__content {\n        background-color: $color-brand-dark;\n        position: relative;\n        padding: 28px calc($spacer * 2) 60px;\n        width: calc(100% + $spacer * 4);\n        margin: 0 (-$spacer * 2);\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        @include media-breakpoint-up(lg) {\n            align-items: initial;\n        }\n        &:before {\n            top: 0;\n            height: 100%;\n            width: 100vw;\n            left: 50%;\n            transform: translateX(-50%);\n            z-index: -1;\n            background-color: $color-brand-dark;\n            position: absolute;\n            content: \"\";\n            @include media-breakpoint-up(lg) {\n                display: none;\n                background-color: $color-brand-lighter;\n            }\n        }\n\n        @include media-breakpoint-up(lg) {\n            margin: 0;\n            width: 56%;\n            padding: 100px 26px 70px 84px;\n        }\n        @include media-breakpoint-up(xl) {\n            padding: 80px 120px 80px 90px;\n        }\n    }\n\n    &__content-wrapper{\n        max-width: 310px;\n        text-align: center;\n        @include media-breakpoint-up(lg){\n            text-align: initial;\n            max-width: none;\n        }\n    }\n\n    &__text {\n        color: $white;\n        font-size: 28px;\n        font-weight: 600;\n        line-height: 1.05;\n        @include media-breakpoint-up(lg){\n            font-size: 40px;\n        }\n    }\n\n    &__line {\n        background-image: url('../../images/contact-us-left-bg.svg');\n        background-size: cover;\n        background-repeat: no-repeat;\n        background-position: center;\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        right: calc(100% - 25px);\n        @each $breakpoint in (lg, xl, xxl) {\n            @include media-breakpoint-up($breakpoint) {\n                width: calc(((100vw - #{map.get($container-max-widths, $breakpoint)}) / 2) + 25px + ($spacer * 2));\n            }\n        }\n    }\n\n    &__aside {\n        width: 100%;\n        position: relative;\n        display: flex;\n        align-items: center;\n        @include media-breakpoint-up(lg) {\n            width: 44%;\n        }\n\n        @include media-breakpoint-up(xl) {\n            padding-right: 65px;\n        }\n\n        @include media-breakpoint-up(xxl) {\n            padding-right: 88px;\n        }\n\n        &:after {\n            content: \"\";\n            position: absolute;\n            background-image: url('../../images/cta-right-bg.jpg');\n            background-size: cover;\n            background-position: center;\n            background-repeat: no-repeat;\n            height: 100%;\n            top: 0;\n            left: calc(42% - 2px);\n            width: calc(59% + ($spacer * 2));\n\n            @each $breakpoint in (sm, md) {\n                @include media-breakpoint-up($breakpoint) {\n                    width: calc(((100vw - #{map.get($container-max-widths, $breakpoint)}) / 2) + 58% + $spacer * 2);\n                }\n            }\n\n            @include media-breakpoint-up(lg) {\n                height: calc(100% + 80px);\n                left: calc(45% - 2px);\n                top: 50%;\n                transform: translateY(-50%);\n            }\n\n            @each $breakpoint in (sm,md,lg, xl, xxl) {\n                @include media-breakpoint-up($breakpoint) {\n                    width: calc(((100vw - #{map.get($container-max-widths, $breakpoint)}) / 2) + 65% + ($spacer * 2));\n                }\n            }\n        }\n    }\n\n    &__title {\n        position: relative;\n        width: 100%;\n        font-family: $font-secondary;\n        z-index: 1;\n        display: flex;\n        align-items: center;\n        height: 100%;\n        padding: 100px 0;\n        font-size: 120px;\n        line-height: .95;\n        text-align: center;\n        color: transparent;\n        @include media-breakpoint-up(lg) {\n            font-size: 140px;\n            text-align: unset;\n            margin-inline-start: -18px;\n        }\n        @include media-breakpoint-up(xxl) {\n            font-size: 160px;\n        }\n\n        &_bg {\n            content: \"\";\n            position: absolute;\n            background-color: $color-brand-lighter;\n            z-index: -1;\n            height: 100%;\n            top: 0;\n            right: 58%;\n            width: calc(42% + ($spacer * 2));\n            @each $breakpoint in (sm, md) {\n                @include media-breakpoint-up($breakpoint) {\n                    width: calc(((100vw - #{map.get($container-max-widths, $breakpoint)}) / 2) + 42% + $spacer * 2);\n                }\n            }\n\n            @include media-breakpoint-up(lg) {\n                right: unset;\n                width: 65%;\n                left: -18px;\n                height: calc(100% + 130px);\n                top: 50%;\n                transform: translateY(-50%);\n            }\n        }\n\n        &:before, &:after {\n            position: absolute;\n            top: 0;\n            left: 0;\n            right: 0;\n            width: 100%;\n            bottom: 0;\n            content: attr(data-text);\n            display: flex;\n            align-items: center;\n        }\n\n        &:before {\n            color: $color-brand;\n            clip-path: polygon(0 0, 42% 0, 42% 100%, 0 100%);\n            @include media-breakpoint-up(lg) {\n                clip-path: polygon(0 0, calc(65% - 18px) 0, calc(65% - 18px) 100%, 0 100%);\n            }\n        }\n\n        &:after {\n            color: $white;\n            clip-path: polygon(42% 0, 100% 0, 100% 100%, 42% 100%);\n            @include media-breakpoint-up(lg) {\n                clip-path: polygon(calc(65% - 18px) 0, 100% 0, 100% 100%, calc(65% - 18px) 100%);\n            }\n        }\n    }\n\n}\n","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n    $n: index($breakpoint-names, $name);\n    @return if($n != null and $n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n    $min: map-get($breakpoints, $name);\n    @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\n// The maximum value is calculated as the minimum of the next one less 0.02px\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n    $next: breakpoint-next($name, $breakpoints);\n    @return if($next, breakpoint-min($next, $breakpoints) - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n    @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n    $min: breakpoint-min($name, $breakpoints);\n    @if $min {\n        @media (min-width: $min) {\n            @content;\n        }\n    } @else {\n        @content;\n    }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n    $max: breakpoint-max($name, $breakpoints);\n    @if $max {\n        @media (max-width: $max) {\n            @content;\n        }\n    } @else {\n        @content;\n    }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n    $min: breakpoint-min($lower, $breakpoints);\n    $max: breakpoint-max($upper, $breakpoints);\n\n    @if $min != null and $max != null {\n        @media (min-width: $min) and (max-width: $max) {\n            @content;\n        }\n    } @else if $max == null {\n        @include media-breakpoint-up($lower, $breakpoints) {\n            @content;\n        }\n    } @else if $min == null {\n        @include media-breakpoint-down($upper, $breakpoints) {\n            @content;\n        }\n    }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n    $min: breakpoint-min($name, $breakpoints);\n    $max: breakpoint-max($name, $breakpoints);\n\n    @if $min != null and $max != null {\n        @media (min-width: $min) and (max-width: $max) {\n            @content;\n        }\n    } @else if $max == null {\n        @include media-breakpoint-up($name, $breakpoints) {\n            @content;\n        }\n    } @else if $min == null {\n        @include media-breakpoint-down($name, $breakpoints) {\n            @content;\n        }\n    }\n}\n","// Font-family\r\n$font-primary: RagSans;\r\n$font-secondary: RAG-Marom-Poster;\r\n\r\n// Colors\r\n$white: #FFFFFF;\r\n$black: #000000;\r\n$color-main: $black;\r\n$color-lighter: #6F6F6F;\r\n$color-gray: #D3D3D3;\r\n$color-light-pink: #FFDEDE;\r\n$color-dark-gray: #888888;\r\n$color-brightest: #B8B8B8;\r\n$color-red: #FF0E0E;\r\n$color-brand: #FF1521;\r\n$color-brand-lighter: #FFE6E6;\r\n$color-light-red-2: #FFB5B9;\r\n$color-brand-dark: #6D052A;\r\n$color-burgundy: #800029;\r\n$color-dark: #3F0417;\r\n\r\n// h1 styles\r\n$h1-font-size: 160px;\r\n$h1-line-height: 160px;\r\n\r\n// h2 styles\r\n$h2-font-size: 100px;\r\n$h2-line-height: 100px;\r\n\r\n// h3 styles\r\n$h3-font-size: 50px;\r\n$h3-line-height: 50px;\r\n\r\n// h4 styles\r\n$h4-font-size: 40px;\r\n$h4-line-height: 40px;\r\n\r\n// h5 styles\r\n$h5-font-size: 36px;\r\n$h5-line-height: 36px;\r\n\r\n// h6 styles\r\n$h6-font-size: 32px;\r\n$h6-line-height: 32px;\r\n\r\n$fluid_max_width: 1440px;\r\n"],"names":[],"sourceRoot":""}