{"version":3,"file":"css/block-loyalty-benefits.css","mappings":"AAKA,0BACI,wBCYa,CDXb,iBAJJ,CEyDQ,0BFnDJ,qCAEQ,gBAJV,CACF,CAOI,iCACI,aCCW,CDCX,eAAgB,CADhB,iBAJR,CE+CQ,yBF7CJ,iCAKQ,eAHV,CACF,CE0CQ,yBF7CJ,iCAQQ,eADV,CACF,CEqCQ,yBF7CJ,iCAWQ,eACV,CACF,CEgCQ,0BF7CJ,iCAcQ,eAGV,CACF,CE2BQ,0BF7CJ,iCAiBQ,eAKV,CACF,CAFI,mCACI,iCAAe,CAEf,gBAAiB,CACjB,iBAAkB,CAFlB,gBAMR,CEgBQ,yBFxBJ,mCAMQ,qCAMV,CACF,CEWQ,0BFxBJ,mCAUQ,gBAAiB,CACjB,iBAAkB,CAFlB,gBAUV,CACF,CALI,mCACI,UC/CA,CDmDA,kBAAmB,CADnB,eAAgB,CADhB,aAAc,CADd,gBAUR,CEHQ,yBFTJ,mCAOQ,cASV,CACF,CAPQ,yCAGI,aAAc,CAFd,WAAY,CACZ,oCAUZ,CANQ,yCAII,sBAFA,gCAAa,CACb,+CAAsB,CACtB,6BAA8B,CAC9B,kBAAmB,CAJnB,iBAYZ,CALQ,kDACI,6DAOZ,CEvBQ,yBFeA,kDAGQ,+DASd,CACF,CANQ,iDACI,+DAQZ,CE/BQ,yBFsBA,iDAGQ,+DAUd,CACF,CAPQ,mFACI,iBASZ,CANQ,2CACI,4BC5FK,CD6FL,cAAe,CAIf,oBAAsB,CAHtB,iBAAkB,CAElB,UAAW,CADX,QAUZ,CE/CQ,yBFiCA,2CAQQ,cAAe,CACf,oBAAqB,CAErB,UAAW,CADX,QAWd,CACF,CAPQ,wCAII,WAAY,CAHZ,cAAe,CAEf,eAAgB,CADhB,eAAgB,CAIhB,QAAS,CAET,eAAgB,CADhB,cAAe,CAFf,OAYZ,CEjEQ,yBFgDA,wCAUQ,eAWd,CACF,CEtEQ,0BFgDA,wCAeQ,WAAY,CAFZ,cAAe,CACf,gBAAiB,CAEjB,cAad,CACF,CATI,gCAEI,gBAAiB,CACjB,iBAAkB,CAFlB,gBAaR,CAVQ,wCAGI,YAAa,CAFb,eAAgB,CAChB,yBAaZ,CAVY,+CAEI,iBAAkB,CADlB,wBAahB,CAPI,gCACI,wBCjIW,CDkIX,UC9IA,CD+IA,gBASR,CEjGQ,yBFqFJ,gCAOQ,wCAAmB,CADnB,gCAWV,CACF,CARQ,wCACI,4BC1JK,CD4JL,cAAe,CACf,iBAAkB,CAClB,eAAgB,CAChB,mBAAqB,CAJrB,iBAAkB,CAKlB,wBAUZ,CEhHQ,yBF+FA,wCASQ,cAAe,CAEf,mBAAqB,CADrB,iBAad,CACF,CATQ,qCACI,cAAe,CACf,eAAgB,CAChB,eAWZ,CE5HQ,yBF8GA,qCAKQ,cAAe,CACf,gBAad,CACF,CElIQ,yBF8GA,qCAUQ,cAAe,CADf,WAgBd,CAXM,wCAGQ,cAAe,CADf,WAed,CALF,CAHQ,iDACI,YAAa,CACb,mBAWZ,CATQ,qDACI,aAAc,CACd,mBAWZ,CARY,wDACI,aAUhB,CARY,4DACI,YAUhB","sources":["webpack://wp-webpack-workflow/./src/scss/acf-blocks/block-loyalty-benefits.scss","webpack://wp-webpack-workflow/./src/scss/parts/_variables.scss","webpack://wp-webpack-workflow/./src/scss/bootstrap/mixins/_breakpoints.scss"],"sourcesContent":["@import \"../bootstrap/variables\";\n@import \"../bootstrap/mixins\";\n@import \"../parts/variables\";\n@import \"../parts/mixin\";\n\n.section-loyalty-benefits {\n    background-color: $color-burgundy;\n    text-align: center;\n\n    &__container {\n        @include media-breakpoint-up(xxl) {\n            max-width: 1376px;\n        }\n    }\n\n    &__title {\n        color: $color-brand-dark;\n        line-height: 92.5%;\n        font-size: 124px;\n        @include media-breakpoint-up(sm) {\n            font-size: 150px;\n        }\n        @include media-breakpoint-up(md) {\n            font-size: 170px;\n        }\n        @include media-breakpoint-up(lg) {\n            font-size: 170px;\n        }\n        @include media-breakpoint-up(xl) {\n            font-size: 210px;\n        }\n        @include media-breakpoint-up(xxl) {\n            font-size: 250px;\n        }\n    }\n\n    &__wrapper {\n        flex-wrap: wrap;\n        max-width: 1240px;\n        margin-left: -5px;\n        margin-right: -5px;\n        @include media-breakpoint-up(lg) {\n            flex-wrap: nowrap;\n        }\n        @include media-breakpoint-up(xl) {\n            max-width: 1250px;\n            margin-left: auto;\n            margin-right: auto;\n        }\n    }\n\n    &__benefit {\n        color: $white;\n        text-align: start;\n        padding: 0 5px;\n        max-width: 33.3%;\n        margin-bottom: 28px;\n        @include media-breakpoint-up(lg) {\n            max-width: 100%;\n        }\n\n        &-image {\n            height: auto;\n            object-fit: cover;\n            display: block;\n        }\n\n        &-inner {\n            position: relative;\n            display: flex;\n            flex-direction: column;\n            justify-content: space-between;\n            margin-inline: auto;\n        }\n\n        &:nth-child(odd) {\n            transform: translateY(-($spacer));\n            @include media-breakpoint-up(lg) {\n                transform: translateY(-($spacer * 3));\n            }\n        }\n\n        &:nth-child(even) {\n            transform: translateY(-($spacer * 4));\n            @include media-breakpoint-up(lg) {\n                transform: translateY(-($spacer * 10));\n            }\n        }\n\n        &-counter, &-name {\n            position: absolute;\n        }\n\n        &-counter {\n            font-family: $font-secondary;\n            font-size: 36px;\n            line-height: 92.5%;\n            top: 10px;\n            right: 13px;\n            letter-spacing: 0.72px;\n            @include media-breakpoint-up(md) {\n                font-size: 60px;\n                letter-spacing: 1.2px;\n                top: 20px;\n                right: 20px;\n            }\n        }\n\n        &-name {\n            font-size: 22px;\n            line-height: 88%;\n            font-weight: 600;\n            bottom: 10px;\n            right: 0;\n            margin: 0;\n            padding: 0 10px;\n            max-width: 110px;\n            @include media-breakpoint-up(lg){\n                max-width: 205px;\n            }\n            @include media-breakpoint-up(xl) {\n                font-size: 25px;\n                line-height: 105%;\n                bottom: 24px;\n                padding: 0 20px;\n            }\n        }\n    }\n\n    &__info {\n        max-width: 1240px;\n        margin-left: auto;\n        margin-right: auto;\n        &-wrapper {\n            overflow: hidden;\n            transition: max-height .4s;\n            max-height: 0;\n\n            &.active {\n                transition: max-height 1s;\n                max-height: 2000px;\n            }\n        }\n    }\n\n    &__item {\n        background-color: $color-brand-dark;\n        color: $white;\n        text-align: start;\n\n        @include media-breakpoint-up(lg) {\n            display: flex;\n            align-items: center;\n        }\n\n        &-counter {\n            font-family: $font-secondary;\n            line-height: 92.5%;\n            font-size: 30px;\n            font-style: normal;\n            font-weight: 900;\n            letter-spacing: 0.6px;\n            text-transform: uppercase;\n            @include media-breakpoint-up(md) {\n                font-size: 40px;\n                line-height: 92.5%;\n                letter-spacing: 0.8px;\n            }\n        }\n\n        &-name {\n            font-size: 22px;\n            font-weight: 600;\n            line-height: 88%;\n            @include media-breakpoint-up(md) {\n                font-size: 25px;\n                line-height: 105%;\n            }\n            @include media-breakpoint-up(lg) {\n                width: 200px;\n                max-width: 100%;\n            }\n        }\n\n        &-benefit {\n            @include media-breakpoint-up(lg) {\n                width: 300px;\n                max-width: 100%;\n            }\n        }\n    }\n\n    &__info-btn{\n        .active-text{\n            display: none;\n            pointer-events: none;\n        }\n        .not-active-text{\n            display: block;\n            pointer-events: none;\n        }\n        &.active{\n            .active-text{\n                display: block;\n            }\n            .not-active-text{\n                display: none;\n            }\n        }\n    }\n}\n","// Font-family\r\n$font-primary: RagSans;\r\n$font-secondary: RAG-Marom-Poster;\r\n\r\n// Colors\r\n$white: #FFFFFF;\r\n$black: #000000;\r\n$color-main: $black;\r\n$color-lighter: #6F6F6F;\r\n$color-gray: #D3D3D3;\r\n$color-light-pink: #FFDEDE;\r\n$color-dark-gray: #888888;\r\n$color-brightest: #B8B8B8;\r\n$color-red: #FF0E0E;\r\n$color-brand: #FF1521;\r\n$color-brand-lighter: #FFE6E6;\r\n$color-light-red-2: #FFB5B9;\r\n$color-brand-dark: #6D052A;\r\n$color-burgundy: #800029;\r\n$color-dark: #3F0417;\r\n\r\n// h1 styles\r\n$h1-font-size: 160px;\r\n$h1-line-height: 160px;\r\n\r\n// h2 styles\r\n$h2-font-size: 100px;\r\n$h2-line-height: 100px;\r\n\r\n// h3 styles\r\n$h3-font-size: 50px;\r\n$h3-line-height: 50px;\r\n\r\n// h4 styles\r\n$h4-font-size: 40px;\r\n$h4-line-height: 40px;\r\n\r\n// h5 styles\r\n$h5-font-size: 36px;\r\n$h5-line-height: 36px;\r\n\r\n// h6 styles\r\n$h6-font-size: 32px;\r\n$h6-line-height: 32px;\r\n\r\n$fluid_max_width: 1440px;\r\n","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n    $n: index($breakpoint-names, $name);\n    @return if($n != null and $n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n    $min: map-get($breakpoints, $name);\n    @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\n// The maximum value is calculated as the minimum of the next one less 0.02px\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n    $next: breakpoint-next($name, $breakpoints);\n    @return if($next, breakpoint-min($next, $breakpoints) - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n    @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n    $min: breakpoint-min($name, $breakpoints);\n    @if $min {\n        @media (min-width: $min) {\n            @content;\n        }\n    } @else {\n        @content;\n    }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n    $max: breakpoint-max($name, $breakpoints);\n    @if $max {\n        @media (max-width: $max) {\n            @content;\n        }\n    } @else {\n        @content;\n    }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n    $min: breakpoint-min($lower, $breakpoints);\n    $max: breakpoint-max($upper, $breakpoints);\n\n    @if $min != null and $max != null {\n        @media (min-width: $min) and (max-width: $max) {\n            @content;\n        }\n    } @else if $max == null {\n        @include media-breakpoint-up($lower, $breakpoints) {\n            @content;\n        }\n    } @else if $min == null {\n        @include media-breakpoint-down($upper, $breakpoints) {\n            @content;\n        }\n    }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n    $min: breakpoint-min($name, $breakpoints);\n    $max: breakpoint-max($name, $breakpoints);\n\n    @if $min != null and $max != null {\n        @media (min-width: $min) and (max-width: $max) {\n            @content;\n        }\n    } @else if $max == null {\n        @include media-breakpoint-up($name, $breakpoints) {\n            @content;\n        }\n    } @else if $min == null {\n        @include media-breakpoint-down($name, $breakpoints) {\n            @content;\n        }\n    }\n}\n"],"names":[],"sourceRoot":""}