{"version":3,"file":"css/block-shop-now.css","mappings":"AAKA,+BACI,GACI,uDAJN,CAME,GACI,2DAJN,CACF,CAFA,uBACI,GACI,uDAJN,CAME,GACI,2DAJN,CACF,CAOA,UACI,eALJ,CAOI,qBACI,iBALR,CAQI,iBACI,aCRM,CDUN,oBAAqB,CEqGrB,cF9F8B,CAF9B,QAAS,CANT,gBAEA,eAAiB,CAEjB,iBAAkB,CADlB,eAAgB,CAEhB,KAAM,CAEN,2DAA0B,CAE1B,SAPR,CEuGQ,gDACI,iBACI,wCF7Fd,CACF,CEoGQ,0BACI,iBACI,eFlGd,CACF,CARI,gBAEI,qBAEA,2CAAuB,CADvB,aAAc,CAFd,gCAAa,CACb,sBAYR,CARQ,oBACI,iBAUZ,CARY,sBAEI,mBAAoB,CACpB,wBCjCF,CDkCE,cAAe,CEmHvB,UFtHkC,CAI1B,SAShB,CE4GQ,gDACI,sBACI,mCFlGd,CACF,CEyGQ,0BACI,sBACI,UFvGd,CACF,CGhBQ,yBHhBI,sBAOQ,mBA6BlB,CACF,CA1BY,sBAEI,mBAAoB,CACpB,wBAAyB,CACzB,eAAgB,CEwGxB,UF3GkC,CAI1B,SA2BhB,CE+EQ,gDACI,sBACI,oCFrEd,CACF,CE4EQ,0BACI,sBACI,WF1Ed,CACF,CG7CQ,yBHLI,sBAOQ,oBA+ClB,CACF,CA5CY,sBAEI,oBAAqB,CACrB,eAAgB,CE8FxB,WFhGkC,CAG1B,SA6ChB,CEmDQ,gDACI,sBACI,oCFzCd,CACF,CEgDQ,0BACI,sBACI,WF9Cd,CACF,CGzEQ,yBHMI,sBAMQ,oBAiElB,CACF,CA9DY,sBAEI,mBAAoB,CACpB,wBC9DG,CD+DH,cAAe,CEmFvB,UFtFkC,CAI1B,SA+DhB,CEsBQ,gDACI,sBACI,oCFZd,CACF,CEmBQ,0BACI,sBACI,WFjBd,CACF,CGtGQ,yBHgBI,sBAOQ,oBAmFlB,CACF,CAhFY,sBAEI,mBAAoB,CACpB,wBC5EF,CD6EE,cAAe,CEwEvB,UF3EkC,CAI1B,SAiFhB,CEPQ,gDACI,sBACI,iCFiBd,CACF,CEVQ,0BACI,sBACI,UFYd,CACF,CGnIQ,yBH2BI,sBAOQ,mBAqGlB,CACF,CA/FI,iBACI,aAAc,CAEd,WAAY,CACZ,oCAAiB,CAFjB,UAmGR,CA/FQ,yBAII,QAAS,CAFT,MAAO,CAGP,oCAAiB,CACjB,iBAAkB,CAHlB,OAAQ,CAFR,KAsGZ,CA7FI,wBAMI,qBCrHA,CDmHA,QAAS,CADT,iBAAkB,CADlB,kBAoGR,CA7FQ,wDAFA,qBANA,gCAAa,CAIb,SAEA,sBAwGR,CAtGQ,gCAMI,2GAAkD,CALlD,aAAc,CEFlB,cFMkC,CAD9B,eAAgB,CAGhB,iBA+FZ,CEpGQ,gDACI,gCACI,uCF8Gd,CACF,CEvGQ,0BACI,gCACI,cFyGd,CACF,CA9GY,wCACI,uDAgHhB,CA5GQ,0BACI,OAAQ,CACR,uFAAwC,CACxC,SA8GZ,CGlMQ,yBHiFA,0BAKQ,OAgHd,CACF,CA7GQ,0BACI,OAAQ,CACR,yFAAyC,CACzC,SA+GZ,CG5MQ,yBH0FA,0BAKQ,OAiHd,CACF,CA7GI,mBAMI,aAAc,CADd,WAAY,CAJZ,SAAU,CACV,iBAAkB,CAClB,OAAQ,CACR,uDAAwB,CEDxB,UFkHR,CE/GQ,gDACI,mBACI,8BFyHd,CACF,CElHQ,0BACI,mBACI,WFoHd,CACF","sources":["webpack://wp-webpack-workflow/./src/scss/acf-blocks/block-shop-now.scss","webpack://wp-webpack-workflow/./src/scss/parts/_variables.scss","webpack://wp-webpack-workflow/./src/scss/parts/_mixin.scss","webpack://wp-webpack-workflow/./src/scss/bootstrap/mixins/_breakpoints.scss"],"sourcesContent":["@import \"../bootstrap/variables\";\n@import \"../bootstrap/mixins\";\n@import \"../parts/variables\";\n@import \"../parts/mixin\";\n\n@keyframes moving-line {\n    from {\n        transform: translateX(0%);\n    }\n    to {\n        transform: translateX(75%);\n    }\n}\n\n.shop-now {\n    overflow: hidden;\n\n    &__container {\n        position: relative;\n    }\n\n    &__title {\n        color: $color-brand;\n        line-height: .87;\n        display: inline-block;\n        margin-top: 0.1em;\n        text-align: left;\n        position: absolute;\n        top: 0;\n        left: 50%;\n        transform: translateX(13%);\n        @include responsive-font-size(80px, 233px);\n        z-index: 4;\n    }\n\n    &__body {\n        display: flex;\n        justify-content: center;\n        direction: ltr;\n        align-items: flex-start;\n\n        &-col {\n            position: relative;\n\n            &-1 {\n                @include responsive-width(22px, 63px);\n                aspect-ratio: 22/243;\n                background-color: $color-brand;\n                margin-top: 20%;\n                z-index: 1;\n                @include media-breakpoint-up(lg) {\n                    aspect-ratio: 63/427;\n                }\n            }\n\n            &-2 {\n                @include responsive-width(43px, 125px);\n                aspect-ratio: 43/363;\n                background-color: #FFB5B9;\n                margin-top: 3.5%;\n                z-index: 1;\n                @include media-breakpoint-up(lg) {\n                    aspect-ratio: 125/830;\n                }\n            }\n\n            &-3 {\n                @include responsive-width(197px, 564px);\n                aspect-ratio: 197/395;\n                margin-top: 8.5%;\n                z-index: 3;\n                @include media-breakpoint-up(lg) {\n                    aspect-ratio: 564/804;\n                }\n            }\n\n            &-4 {\n                @include responsive-width(88px, 254px);\n                aspect-ratio: 88/326;\n                background-color: $color-brand-dark;\n                margin-top: 17%;\n                z-index: 1;\n                @include media-breakpoint-up(lg) {\n                    aspect-ratio: 254/610;\n                }\n            }\n\n            &-5 {\n                @include responsive-width(11px, 20px);\n                aspect-ratio: 11/193;\n                background-color: $color-brand;\n                margin-top: 23%;\n                z-index: 1;\n                @include media-breakpoint-up(lg) {\n                    aspect-ratio: 20/426;\n                }\n            }\n        }\n    }\n\n\n    &__image {\n        display: block;\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n\n        &-wrapper {\n            top: 0;\n            left: 0;\n            right: 0;\n            bottom: 0;\n            object-fit: cover;\n            position: absolute;\n        }\n    }\n\n    &__running-line {\n        display: flex;\n        white-space: nowrap;\n        position: absolute;\n        left: 50%;\n        gap: .3em;\n        background-color: $black;\n        justify-content: center;\n\n        &-wrapper {\n            color: #FFEBEB;\n            display: flex;\n            gap: .3em;\n            line-height: 1.7;\n            @include responsive-font-size(16px, 45px);\n            animation: moving-line 220s linear infinite normal;\n            position: relative;\n            justify-content: center;\n\n            &-reverse {\n                animation-duration: 220s;\n            }\n        }\n\n        &-1 {\n            top: 32%;\n            transform: translateX(-50%) rotate(8deg);\n            z-index: 2;\n            @include media-breakpoint-up(lg){\n                top: 47%;\n            }\n        }\n\n        &-2 {\n            top: 51%;\n            transform: translateX(-50%) rotate(-4deg);\n            z-index: 4;\n            @include media-breakpoint-up(lg){\n                top: 74%;\n            }\n        }\n    }\n\n    &__barcode {\n        left: -16%;\n        position: absolute;\n        top: 36%;\n        transform: rotate(77deg);\n        height: auto;\n        display: block;\n        @include responsive-width(76px, 219px);\n    }\n}\n","// Font-family\r\n$font-primary: RagSans;\r\n$font-secondary: RAG-Marom-Poster;\r\n\r\n// Colors\r\n$white: #FFFFFF;\r\n$black: #000000;\r\n$color-main: $black;\r\n$color-lighter: #6F6F6F;\r\n$color-gray: #D3D3D3;\r\n$color-light-pink: #FFDEDE;\r\n$color-dark-gray: #888888;\r\n$color-brightest: #B8B8B8;\r\n$color-red: #FF0E0E;\r\n$color-brand: #FF1521;\r\n$color-brand-lighter: #FFE6E6;\r\n$color-light-red-2: #FFB5B9;\r\n$color-brand-dark: #6D052A;\r\n$color-burgundy: #800029;\r\n$color-dark: #3F0417;\r\n\r\n// h1 styles\r\n$h1-font-size: 160px;\r\n$h1-line-height: 160px;\r\n\r\n// h2 styles\r\n$h2-font-size: 100px;\r\n$h2-line-height: 100px;\r\n\r\n// h3 styles\r\n$h3-font-size: 50px;\r\n$h3-line-height: 50px;\r\n\r\n// h4 styles\r\n$h4-font-size: 40px;\r\n$h4-line-height: 40px;\r\n\r\n// h5 styles\r\n$h5-font-size: 36px;\r\n$h5-line-height: 36px;\r\n\r\n// h6 styles\r\n$h6-font-size: 32px;\r\n$h6-line-height: 32px;\r\n\r\n$fluid_max_width: 1440px;\r\n","@use \"sass:map\";\r\n@use \"sass:math\";\r\n\r\n@mixin custom-scrollbar {\r\n    //overflow-y: auto;\r\n\t\r\n    &::-webkit-scrollbar {\r\n        width: 10px;\r\n        height: 10px;\r\n    }\r\n\t\r\n    &::-webkit-scrollbar-track {\r\n        border-radius: 5px;\r\n        background: $white;\r\n    }\r\n\t\r\n    &::-webkit-scrollbar-thumb {\r\n        transition: background-color .15s;\r\n        border-radius: 5px;\r\n        background: #B4B4B4;\r\n    }\r\n\t\r\n    &::-webkit-scrollbar-thumb:hover {\r\n        background: rgba(#B4B4B4, .8);\r\n    }\r\n\t\r\n    &::-webkit-scrollbar-thumb:active {\r\n        background: rgba(#B4B4B4, .9);\r\n    }\r\n}\r\n\r\n@mixin h1 {\r\n    font-size: $h1-font-size;\r\n    line-height: $h1-line-height;\r\n}\r\n\r\n@mixin h2 {\r\n    font-size: $h2-font-size;\r\n    line-height: $h2-line-height;\r\n}\r\n\r\n@mixin h3 {\r\n    font-size: $h3-font-size;\r\n    line-height: $h3-line-height;\r\n}\r\n\r\n@mixin h4 {\r\n    font-size: $h4-font-size;\r\n    line-height: $h4-line-height;\r\n}\r\n\r\n@mixin h5 {\r\n    font-size: $h5-font-size;\r\n    line-height: $h5-line-height;\r\n}\r\n\r\n@mixin h6 {\r\n    font-size: $h6-font-size;\r\n    line-height: $h6-line-height;\r\n}\r\n\r\n@mixin make-responsive-headers() {\r\n    h1 {\r\n        @include h1;\r\n    }\r\n    h2 {\r\n        @include h2;\r\n    }\r\n    h3 {\r\n        @include h3;\r\n    }\r\n    h4 {\r\n        @include h4;\r\n    }\r\n    h5 {\r\n        @include h5;\r\n    }\r\n    h6 {\r\n        @include h6;\r\n    }\r\n    @each $breakpoint in map-keys($grid-breakpoints) {\r\n        @include media-breakpoint-up($breakpoint) {\r\n            $infix: breakpoint-infix($breakpoint, $grid-breakpoints);\r\n\t\t\t\r\n            .h1#{$infix} {\r\n                @include h1;\r\n            }\r\n            .h2#{$infix} {\r\n                @include h2;\r\n            }\r\n            .h3#{$infix} {\r\n                @include h3;\r\n            }\r\n            .h4#{$infix} {\r\n                @include h4;\r\n            }\r\n            .h5#{$infix} {\r\n                @include h5;\r\n            }\r\n            .h6#{$infix} {\r\n                @include h6;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n// ==============================\r\n// Responsive font size mixin\r\n// ==============================\r\n\r\n//  default font scale bounding\r\n$font-lock-min: \"sm\" !default;\r\n$font-lock-max: \"xl\" !default;\r\n\r\n\r\n//  responsive font-size\r\n@mixin responsive-font-size(\r\n    $min,\r\n    $max: null,\r\n    $lock-min: $font-lock-min,\r\n    $lock-max: $font-lock-max\r\n) {\r\n    & {\r\n        font-size: $min;\r\n    }\r\n    @if $max {\r\n        @media (min-width: map.get($grid-breakpoints, $font-lock-min)) and (max-width: map.get($grid-breakpoints, $font-lock-max)) {\r\n            & {\r\n                font-size: calc(\r\n                    #{$min} +\r\n                    #{strip-unit($max) - strip-unit($min)} *\r\n                    (100vw - #{map.get($grid-breakpoints, $font-lock-min)}) /\r\n                    #{strip-unit(map.get($grid-breakpoints, $font-lock-max)) - strip-unit(map.get($grid-breakpoints, $font-lock-min))}\r\n                );\r\n            }\r\n        }\r\n        @media (min-width: map.get($grid-breakpoints, $font-lock-max)) {\r\n            & {\r\n                font-size: $max;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n//  strip units helper function\r\n@function strip-unit($number) {\r\n    @if type-of($number) == 'number' and not unitless($number) {\r\n        @return math.div($number, $number * 0 + 1);\r\n    }\r\n\t\r\n    @return $number;\r\n}\r\n\r\n//  responsive width\r\n@mixin responsive-width(\r\n    $min,\r\n    $max: null,\r\n    $lock-min: $font-lock-min,\r\n    $lock-max: $font-lock-max\r\n) {\r\n    & {\r\n        width: $min;\r\n    }\r\n    @if $max {\r\n        @media (min-width: map.get($grid-breakpoints, $font-lock-min)) and (max-width: map.get($grid-breakpoints, $font-lock-max)) {\r\n            & {\r\n                width: calc(\r\n                    #{$min} +\r\n                    #{strip-unit($max) - strip-unit($min)} *\r\n                    (100vw - #{map.get($grid-breakpoints, $font-lock-min)}) /\r\n                    #{strip-unit(map.get($grid-breakpoints, $font-lock-max)) - strip-unit(map.get($grid-breakpoints, $font-lock-min))}\r\n                );\r\n            }\r\n        }\r\n        @media (min-width: map.get($grid-breakpoints, $font-lock-max)) {\r\n            & {\r\n                width: $max;\r\n            }\r\n        }\r\n    }\r\n}\r\n","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n    $n: index($breakpoint-names, $name);\n    @return if($n != null and $n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n    $min: map-get($breakpoints, $name);\n    @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\n// The maximum value is calculated as the minimum of the next one less 0.02px\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n    $next: breakpoint-next($name, $breakpoints);\n    @return if($next, breakpoint-min($next, $breakpoints) - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n    @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n    $min: breakpoint-min($name, $breakpoints);\n    @if $min {\n        @media (min-width: $min) {\n            @content;\n        }\n    } @else {\n        @content;\n    }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n    $max: breakpoint-max($name, $breakpoints);\n    @if $max {\n        @media (max-width: $max) {\n            @content;\n        }\n    } @else {\n        @content;\n    }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n    $min: breakpoint-min($lower, $breakpoints);\n    $max: breakpoint-max($upper, $breakpoints);\n\n    @if $min != null and $max != null {\n        @media (min-width: $min) and (max-width: $max) {\n            @content;\n        }\n    } @else if $max == null {\n        @include media-breakpoint-up($lower, $breakpoints) {\n            @content;\n        }\n    } @else if $min == null {\n        @include media-breakpoint-down($upper, $breakpoints) {\n            @content;\n        }\n    }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n    $min: breakpoint-min($name, $breakpoints);\n    $max: breakpoint-max($name, $breakpoints);\n\n    @if $min != null and $max != null {\n        @media (min-width: $min) and (max-width: $max) {\n            @content;\n        }\n    } @else if $max == null {\n        @include media-breakpoint-up($name, $breakpoints) {\n            @content;\n        }\n    } @else if $min == null {\n        @include media-breakpoint-down($name, $breakpoints) {\n            @content;\n        }\n    }\n}\n"],"names":[],"sourceRoot":""}