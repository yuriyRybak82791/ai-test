{"version":3,"file":"css/block-matches-list.css","mappings":"AAMI,0BAGI,eCJA,CDGA,wBAAyB,CADzB,iBAAkB,CAGlB,sCACA,cALR,CEmEQ,4BFnEJ,0BAOQ,gBAAiB,CACjB,iBAHV,CACF,CEgDQ,yBFtDJ,0BAWQ,cADV,CACF,CAGQ,iCAGI,wCAAmB,CAFnB,gCAAa,CACb,+CAAsB,CAItB,iBAAkB,CAClB,kBAAmB,CAHnB,iBAAkB,CAClB,SACZ,CEkCQ,yBFxCA,iCASQ,iBAAkB,CAClB,kBAAmB,CACnB,UACd,CACF,CAAY,+EAOI,wBAAyB,CANzB,UAAW,CAGX,WAAY,CAFZ,iBAAkB,CAGlB,OAAQ,CACR,6DAA2B,CAH3B,SAMhB,CACY,wCACI,MAChB,CAEY,uCACI,OAAhB,CEYQ,yBFxCA,iCAmCQ,yCAHd,CAAc,+EACI,YAElB,CACF,CAEY,sCACI,oBAAhB,CECQ,yBFGgB,6DACI,WAAY,CACZ,oBAAqB,CACrB,kBAD1B,CACF,CAQQ,iCAEI,qBACA,wCAAmB,CAFnB,gCAAa,CAGb,+CAAsB,CACtB,OGhCH,CH6BG,sBAAuB,CAKvB,iBAAkB,CAClB,kBAAmB,CAFnB,SAJZ,CEhBQ,yBFcA,iCAUQ,iBAAkB,CAClB,kBAAmB,CACnB,UAJd,CACF,CEvBQ,yBFcA,iCAeQ,yCAAmB,CACnB,SAFd,CACF,CAKQ,gCAEI,wCAAmB,CADnB,gCAAa,CAEb,OAAQ,CACR,UAHZ,CEnCQ,yBFkCA,gCAMQ,QADd,CACF,CExCQ,yBFkCA,gCAUQ,QAAd,CACF,CE7CQ,0BFkCA,gCAcQ,QACd,CACF,CElDQ,yBFmDI,kCAEQ,yDAClB,CACF,CAGQ,iCACI,eAAgB,CAChB,kBADZ,CAGY,wCAEI,0BADA,eAAgB,CAChB,wBADhB,CAKQ,iCAEI,iBAAkB,CAClB,kBAAmB,CAFnB,SADZ,CEpEQ,yBFoEA,iCAKQ,iBAAkB,CAClB,kBAAmB,CACnB,UADd,CACF,CAEY,sCAMI,0BALA,aAAc,CAEd,WAAY,CAGZ,wBAAyB,CAJzB,cAAe,CAGf,wCAAmB,CADnB,UAEhB,CEnFQ,yBF6EI,sCASQ,WAAY,CADZ,UAGlB,CACF,CAEQ,gCACI,aAAc,CAGd,WAAY,CAFZ,wCAAmB,CACnB,UACZ,CE/FQ,yBF2FA,gCAOQ,WAAY,CADZ,UAGd,CACF,CAEI,8BAGI,qBACA,wCAAmB,CAHnB,gCAAa,CAOb,iCAAe,CANf,QAAS,CACT,sBAAuB,CAGvB,gBAAiB,CACjB,iBAAkB,CAFlB,eAGR,CE/GQ,yBFuGJ,8BAUQ,cAEV,CAIc,sCACI,YAAlB,CAJF","sources":["webpack://wp-webpack-workflow/./src/scss/acf-blocks/block-matches-list.scss","webpack://wp-webpack-workflow/./src/scss/parts/_variables.scss","webpack://wp-webpack-workflow/./src/scss/bootstrap/mixins/_breakpoints.scss","webpack://wp-webpack-workflow/./src/scss/bootstrap/_variables.scss"],"sourcesContent":["@import \"../bootstrap/variables\";\n@import \"../bootstrap/mixins\";\n@import \"../parts/variables\";\n@import \"../parts/mixin\";\n\n.matches-list {\n    &__match-item {\n        border-radius: 5px;\n        border: 1px solid #E9E9E9;\n        background: $white;\n        box-shadow:0 12px 40px rgba($black, .1);\n        font-size: 15px;\n        @include media-breakpoint-down(sm) {\n            padding-left: 4px;\n            padding-right: 4px;\n        }\n        @include media-breakpoint-up(lg) {\n            font-size: 16px;\n        }\n\n        &__place {\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            position: relative;\n            width: 23%;\n            padding-left: 12px;\n            padding-right: 12px;\n            @include media-breakpoint-up(sm) {\n                padding-left: 16px;\n                padding-right: 16px;\n                width: auto;\n            }\n            &:before, &:after {\n                content: \"\";\n                position: absolute;\n                width: 1px;\n                height: 150%;\n                top: 50%;\n                transform: translateY(-50%);\n                background-color: #E9E9E9;\n            }\n\n            &:before {\n                left: 0;\n            }\n\n            &:after {\n                right: 0;\n            }\n\n            @include media-breakpoint-up(md) {\n                &:before, &:after {\n                    display: none;\n                }\n                flex-direction: row;\n            }\n\n            span {\n                display: inline-block;\n\n                @include media-breakpoint-up(md) {\n                    &:not(:last-child) {\n                        &:after {\n                            content: \"|\";\n                            display: inline-block;\n                            margin-inline: .3em;\n                        }\n                    }\n                }\n\n            }\n        }\n\n        &__teams {\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            flex-direction: column;\n            gap: $spacer;\n            width: 53%;\n            padding-left: 12px;\n            padding-right: 12px;\n            @include media-breakpoint-up(sm) {\n                padding-left: 16px;\n                padding-right: 16px;\n                width: auto;\n            }\n            @include media-breakpoint-up(md) {\n                flex-direction: row;\n                gap: unset;\n            }\n        }\n\n        &__team {\n            display: flex;\n            align-items: center;\n            gap: 8px;\n            width: 100%;\n            @include media-breakpoint-up(sm) {\n                gap: calc($spacer * 2);\n            }\n\n            @include media-breakpoint-up(lg) {\n                gap: calc($spacer * 3);\n            }\n\n            @include media-breakpoint-up(xl) {\n                gap: calc($spacer * 4);\n            }\n\n            &-1 {\n                @include media-breakpoint-up(md) {\n                    flex-direction: row-reverse;\n                }\n            }\n        }\n\n        &__score {\n            font-weight: 600;\n            white-space: nowrap;\n\n            &-mobile {\n                font-weight: 600;\n                margin-inline-start: auto;\n            }\n        }\n\n        &__ligue {\n            width: 24%;\n            padding-left: 12px;\n            padding-right: 12px;\n            @include media-breakpoint-up(sm) {\n                padding-left: 16px;\n                padding-right: 16px;\n                width: auto;\n            }\n            &-logo {\n                display: block;\n                max-width: 60px;\n                height: auto;\n                width: 100%;\n                object-fit: contain;\n                margin-inline-start: auto;\n                @include media-breakpoint-up(md) {\n                    width: 80px;\n                    height: 80px;\n                }\n            }\n        }\n\n        &__logo {\n            display: block;\n            object-fit: contain;\n            width: 34px;\n            height: 40px;\n            @include media-breakpoint-up(md) {\n                width: 45px;\n                height: 55px;\n            }\n        }\n    }\n\n    &__button-wrapper{\n        display: flex;\n        gap: 22px;\n        justify-content: center;\n        align-items: center;\n        max-width: 260px;\n        margin-left: auto;\n        margin-right: auto;\n        flex-wrap: wrap;\n        @include media-breakpoint-up(md){\n            max-width: none;\n        }\n    }\n    &__button{\n        &.btn-arrow{\n            @include media-breakpoint-up(md){\n                &::after{\n                    display: none;\n                }\n            }\n        }\n        \n    }\n    &__button,\n    &__link{\n        \n    }\n}\n","// Font-family\r\n$font-primary: RagSans;\r\n$font-secondary: RAG-Marom-Poster;\r\n\r\n// Colors\r\n$white: #FFFFFF;\r\n$black: #000000;\r\n$color-main: $black;\r\n$color-lighter: #6F6F6F;\r\n$color-gray: #D3D3D3;\r\n$color-light-pink: #FFDEDE;\r\n$color-dark-gray: #888888;\r\n$color-brightest: #B8B8B8;\r\n$color-red: #FF0E0E;\r\n$color-brand: #FF1521;\r\n$color-brand-lighter: #FFE6E6;\r\n$color-light-red-2: #FFB5B9;\r\n$color-brand-dark: #6D052A;\r\n$color-burgundy: #800029;\r\n$color-dark: #3F0417;\r\n\r\n// h1 styles\r\n$h1-font-size: 160px;\r\n$h1-line-height: 160px;\r\n\r\n// h2 styles\r\n$h2-font-size: 100px;\r\n$h2-line-height: 100px;\r\n\r\n// h3 styles\r\n$h3-font-size: 50px;\r\n$h3-line-height: 50px;\r\n\r\n// h4 styles\r\n$h4-font-size: 40px;\r\n$h4-line-height: 40px;\r\n\r\n// h5 styles\r\n$h5-font-size: 36px;\r\n$h5-line-height: 36px;\r\n\r\n// h6 styles\r\n$h6-font-size: 32px;\r\n$h6-line-height: 32px;\r\n\r\n$fluid_max_width: 1440px;\r\n","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n    $n: index($breakpoint-names, $name);\n    @return if($n != null and $n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n    $min: map-get($breakpoints, $name);\n    @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\n// The maximum value is calculated as the minimum of the next one less 0.02px\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n    $next: breakpoint-next($name, $breakpoints);\n    @return if($next, breakpoint-min($next, $breakpoints) - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n    @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n    $min: breakpoint-min($name, $breakpoints);\n    @if $min {\n        @media (min-width: $min) {\n            @content;\n        }\n    } @else {\n        @content;\n    }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n    $max: breakpoint-max($name, $breakpoints);\n    @if $max {\n        @media (max-width: $max) {\n            @content;\n        }\n    } @else {\n        @content;\n    }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n    $min: breakpoint-min($lower, $breakpoints);\n    $max: breakpoint-max($upper, $breakpoints);\n\n    @if $min != null and $max != null {\n        @media (min-width: $min) and (max-width: $max) {\n            @content;\n        }\n    } @else if $max == null {\n        @include media-breakpoint-up($lower, $breakpoints) {\n            @content;\n        }\n    } @else if $min == null {\n        @include media-breakpoint-down($upper, $breakpoints) {\n            @content;\n        }\n    }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n    $min: breakpoint-min($name, $breakpoints);\n    $max: breakpoint-max($name, $breakpoints);\n\n    @if $min != null and $max != null {\n        @media (min-width: $min) and (max-width: $max) {\n            @content;\n        }\n    } @else if $max == null {\n        @include media-breakpoint-up($name, $breakpoints) {\n            @content;\n        }\n    } @else if $min == null {\n        @include media-breakpoint-down($name, $breakpoints) {\n            @content;\n        }\n    }\n}\n","// Bootstrap variables\n$grid-columns: 12 !default;\n$grid-gutter-width: 32px;\n$grid-row-columns: 6 !default;\n$enable-grid-classes: true !default;\n\n// grid-breakpoints\n$grid-breakpoints: (\n    xs: 0,\n    sm: 576px,\n    md: 768px,\n    lg: 992px,\n    xl: 1200px,\n    xxl: 1440px\n) !default;\n\n// container-max-widths\n$container-max-widths: (\n    sm: 540px,\n    md: 720px,\n    lg: 960px,\n    xl: 1180px,\n    xxl: 1272px\n) !default;\n\n// Z-index master list\n//\n// Warning: Avoid customizing these values. They're used for a bird's eye view\n// of components dependent on the z-axis and are designed to all work together.\n\n$zindex-dropdown: 1000 !default;\n$zindex-sticky: 1020 !default;\n$zindex-fixed: 1030 !default;\n$zindex-modal-backdrop: 1040 !default;\n$zindex-modal: 1050 !default;\n$zindex-popover: 1060 !default;\n$zindex-tooltip: 1070 !default;\n\n// Utilities\n$displays: none, inline, inline-block, block, table, table-row, table-cell, flex, inline-flex !default;\n$positions: static, relative, absolute, fixed, sticky, initial !default;\n\n// Spacing\n//\n// Control the default styling of most Bootstrap elements by modifying these\n// variables. Mostly focused on spacing.\n// You can add more entries to the $spacers map, should you need more variation.\n$spacer: 8px !default;\n$spacers: () !default;\n$spacers: map-merge(\n    (\n        0: 0,\n        50: calc($spacer / 2),\n        1: $spacer,\n        2: calc($spacer * 2),\n        3: calc($spacer * 3),\n        4: calc($spacer * 4),\n        5: calc($spacer * 5),\n        6: calc($spacer * 6),\n        7: calc($spacer * 7),\n        8: calc($spacer * 8),\n        9: calc($spacer * 9),\n        10: calc($spacer * 10),\n        11: calc($spacer * 11),\n        12: calc($spacer * 12),\n        13: calc($spacer * 13),\n        14: calc($spacer * 14),\n        15: calc($spacer * 15),\n        16: calc($spacer * 16),\n    ),\n    $spacers\n);\n\n// This variable affects the `.h-*` and `.w-*` classes.\n$sizes: () !default;\n$sizes: map-merge(\n    (\n        25: 25%,\n        50: 50%,\n        75: 75%,\n        100: 100%,\n        auto: auto\n    ),\n    $sizes\n);\n\n$font-weight-lighter: lighter !default;\n$font-weight-light: 300 !default;\n$font-weight-normal: 400 !default;\n$font-weight-bold: 400 !default;\n$font-weight-bolder: bolder !default;\n"],"names":[],"sourceRoot":""}