{"version":3,"file":"css/block-blog-filters.css","mappings":"AAKA,cAEI,kBAAmB,CADnB,eAHJ,CCyDQ,yBDvDR,cAKQ,kBAAmB,CADnB,eADN,CACF,CAGI,qBAII,mBEfO,CFaP,cAAe,CAGf,eAAgB,CAFhB,gBAAiB,CAGjB,kBAAmB,CALnB,iBAIR,CC2CQ,yBDhDJ,qBAQQ,cAAe,CACf,gBAAiB,CACjB,kBACV,CACF,CACI,oBAEI,wCAAmB,CADnB,gCAAa,CAIb,+CAAsB,CAFtB,cACA,iBAER,CC6BQ,yBDnCJ,oBAQQ,qBACA,wCAAmB,CAFnB,yCAAmB,CACnB,sBAIV,CACF,CADI,sBAEI,QAAS,CAET,SAAU,CACV,iBAAkB,CAFlB,iBAAkB,CAFlB,OAOR,CADI,0BACI,qBExCA,CF0CA,iBAAkB,CADlB,WAAY,CAEZ,WAGR,CCSQ,yBDhBJ,0BAMQ,WAKV,CACF,CAJQ,iCACI,WAMZ,CALY,uDAGI,wBEpDR,CFmDQ,2BAA8B,CAD9B,4BAShB,CANgB,6DACI,iDAQpB,CALY,sDAEI,SAAU,CADV,kBAQhB,CAJQ,oCASI,sBARA,yBACA,iBAAkB,CAIlB,UE9DM,CFmEN,cAAe,CAHf,gCAAa,CAJb,cAAe,CAMf,OAAQ,CADR,6BAA8B,CAJ9B,gBAAiB,CAFjB,iBAAkB,CAIlB,mCAUZ,CALY,sCACI,mBAOhB,CALY,2CACI,UAOhB,CALY,0CAKI,+PAAgR,CAChR,uBAA2B,CAC3B,2BAA4B,CAN5B,WACA,aAAc,CAEd,WAAY,CAIZ,qIALA,UAYhB,CCxCQ,yBDOA,oCA6BQ,cAQd,CACF,CANQ,mCAKI,qBEnGJ,CFoGI,yBAGA,6BAA8B,CAD9B,8BAA+B,CAD/B,YAAa,CAIb,SAAU,CAVV,iBAAkB,CAGlB,OAAQ,CAFR,QAAS,CAUT,sBACA,uCAHA,iBAAkB,CAPlB,UAkBZ,CANQ,sCAEI,QAAS,CADT,SASZ,CANQ,qCAGI,cAAe,CACf,gBAAiB,CAHjB,eAAgB,CAChB,gBAAiB,CAGjB,sCAQZ,CCvEQ,yBD0DA,qCAOQ,cAUd,CACF,CATY,gDACI,mBAWhB,CATY,uFAEI,wBErHM,CFsHN,cAUhB","sources":["webpack://wp-webpack-workflow/./src/scss/acf-blocks/block-blog-filters.scss","webpack://wp-webpack-workflow/./src/scss/bootstrap/mixins/_breakpoints.scss","webpack://wp-webpack-workflow/./src/scss/parts/_variables.scss"],"sourcesContent":["@import \"../bootstrap/variables\";\r\n@import \"../bootstrap/mixins\";\r\n@import \"../parts/variables\";\r\n@import \"../parts/mixin\";\r\n\r\n.blog-filters{\r\n    margin-top: calc($spacer * 5);\r\n    margin-bottom: 36px;\r\n    @include media-breakpoint-up(lg){\r\n        margin-top: calc($spacer * 12);\r\n        margin-bottom: 50px;\r\n    }\r\n    &__title{\r\n        text-align: center;\r\n        font-size: 28px;\r\n        line-height: 24px;\r\n        font-family: $font-primary;\r\n        font-weight: 600;\r\n        margin-bottom: 26px;\r\n        @include media-breakpoint-up(sm){\r\n            font-size: 40px;\r\n            line-height: 42px;\r\n            margin-bottom: calc($spacer * 4);\r\n        }\r\n    }\r\n    &__form{\r\n        display: flex;\r\n        align-items: center;\r\n        gap:12px 20px;\r\n        position: relative;\r\n        flex-direction: column;\r\n        @include media-breakpoint-up(sm){\r\n            flex-direction: row;\r\n            justify-content: center;\r\n            align-items: normal;\r\n        }\r\n    }\r\n    &__select{\r\n        width: 0;\r\n        height: 0;\r\n        visibility: hidden;\r\n        opacity: 0;\r\n        position: absolute;\r\n    }\r\n    .select-box{\r\n        background-color: $white;\r\n        width: 236px;\r\n        position: relative;\r\n        z-index: 100;\r\n        @include media-breakpoint-up(sm){\r\n            width: 245px;\r\n        }\r\n        &.active{\r\n            z-index: 200;\r\n            .select-box__selected{\r\n                border-bottom-right-radius: 0px;\r\n                border-bottom-left-radius: 0px;\r\n                border-bottom-color: $white;\r\n                &::after{\r\n                    transform: scale(1, -1);\r\n                }\r\n            }\r\n            .select-box__wrapper{\r\n                visibility: visible;\r\n                opacity: 1 ;\r\n            }\r\n        }\r\n        &__selected{\r\n            border: 1px solid $color-gray;\r\n            border-radius: 6px;\r\n            padding: 10px 17px;\r\n            font-size: 15px;\r\n            line-height: 19px;\r\n            color: $color-dark-gray;\r\n            transition:border-radius .3s linear;\r\n            display: flex;\r\n            justify-content: space-between;\r\n            gap: 5px;\r\n            cursor: pointer;\r\n            *{\r\n                pointer-events: none;\r\n            }\r\n            &.active{\r\n                color: $black;\r\n            }\r\n            &::after{\r\n                content: '';\r\n                display: block;\r\n                width: 14px;\r\n                height: 19px;\r\n                background-image: url(\"data:image/svg+xml,%3Csvg width='14' height='9' viewBox='0 0 14 9' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M0.999999 1.5L7 7.5L13 1.5' stroke='black' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'/%3E%3C/svg%3E\");\r\n                background-position: center;\r\n                background-repeat: no-repeat;\r\n                transition:transform .3s linear;\r\n            }\r\n            @include media-breakpoint-up(sm){\r\n                font-size: 16px;\r\n            }\r\n        }\r\n        &__wrapper{\r\n            position: absolute;\r\n            top: 100%;\r\n            width: 100%;\r\n            right: 0;\r\n            background-color: $white;\r\n            border: 1px solid $color-gray;\r\n            border-top: 0;\r\n            border-bottom-right-radius: 6px;\r\n            border-bottom-left-radius: 6px;\r\n            visibility: hidden;\r\n            opacity: 0;\r\n            transition: .3s linear;\r\n            transition-property:opacity, visibility;\r\n        }\r\n        &__variations{\r\n            padding: 0;\r\n            margin: 0;   \r\n        }\r\n        &__variation{\r\n            list-style: none;\r\n            padding: 8px 17px;\r\n            font-size: 15px;\r\n            line-height: 19px;\r\n            transition:background-color .3s linear;\r\n            @include media-breakpoint-up(sm){\r\n                font-size: 16px;\r\n            }\r\n            &:last-child{\r\n                padding-bottom: 16px;\r\n            }\r\n            &.active,\r\n            &:hover{\r\n                background-color: $color-brand-lighter;\r\n                cursor: pointer;\r\n            }\r\n        }\r\n    }\r\n}\r\n","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n    $n: index($breakpoint-names, $name);\n    @return if($n != null and $n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n    $min: map-get($breakpoints, $name);\n    @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\n// The maximum value is calculated as the minimum of the next one less 0.02px\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n    $next: breakpoint-next($name, $breakpoints);\n    @return if($next, breakpoint-min($next, $breakpoints) - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n    @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n    $min: breakpoint-min($name, $breakpoints);\n    @if $min {\n        @media (min-width: $min) {\n            @content;\n        }\n    } @else {\n        @content;\n    }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n    $max: breakpoint-max($name, $breakpoints);\n    @if $max {\n        @media (max-width: $max) {\n            @content;\n        }\n    } @else {\n        @content;\n    }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n    $min: breakpoint-min($lower, $breakpoints);\n    $max: breakpoint-max($upper, $breakpoints);\n\n    @if $min != null and $max != null {\n        @media (min-width: $min) and (max-width: $max) {\n            @content;\n        }\n    } @else if $max == null {\n        @include media-breakpoint-up($lower, $breakpoints) {\n            @content;\n        }\n    } @else if $min == null {\n        @include media-breakpoint-down($upper, $breakpoints) {\n            @content;\n        }\n    }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n    $min: breakpoint-min($name, $breakpoints);\n    $max: breakpoint-max($name, $breakpoints);\n\n    @if $min != null and $max != null {\n        @media (min-width: $min) and (max-width: $max) {\n            @content;\n        }\n    } @else if $max == null {\n        @include media-breakpoint-up($name, $breakpoints) {\n            @content;\n        }\n    } @else if $min == null {\n        @include media-breakpoint-down($name, $breakpoints) {\n            @content;\n        }\n    }\n}\n","// Font-family\r\n$font-primary: RagSans;\r\n$font-secondary: RAG-Marom-Poster;\r\n\r\n// Colors\r\n$white: #FFFFFF;\r\n$black: #000000;\r\n$color-main: $black;\r\n$color-lighter: #6F6F6F;\r\n$color-gray: #D3D3D3;\r\n$color-light-pink: #FFDEDE;\r\n$color-dark-gray: #888888;\r\n$color-brightest: #B8B8B8;\r\n$color-red: #FF0E0E;\r\n$color-brand: #FF1521;\r\n$color-brand-lighter: #FFE6E6;\r\n$color-light-red-2: #FFB5B9;\r\n$color-brand-dark: #6D052A;\r\n$color-burgundy: #800029;\r\n$color-dark: #3F0417;\r\n\r\n// h1 styles\r\n$h1-font-size: 160px;\r\n$h1-line-height: 160px;\r\n\r\n// h2 styles\r\n$h2-font-size: 100px;\r\n$h2-line-height: 100px;\r\n\r\n// h3 styles\r\n$h3-font-size: 50px;\r\n$h3-line-height: 50px;\r\n\r\n// h4 styles\r\n$h4-font-size: 40px;\r\n$h4-line-height: 40px;\r\n\r\n// h5 styles\r\n$h5-font-size: 36px;\r\n$h5-line-height: 36px;\r\n\r\n// h6 styles\r\n$h6-font-size: 32px;\r\n$h6-line-height: 32px;\r\n\r\n$fluid_max_width: 1440px;\r\n"],"names":[],"sourceRoot":""}