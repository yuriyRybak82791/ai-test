{"version":3,"file":"js/block-faq.js","mappings":";;;;;;;;;;;AAAA;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACN+C;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA","sources":["webpack://wp-webpack-workflow/./src/scss/acf-blocks/block-faqs.scss","webpack://wp-webpack-workflow/webpack/bootstrap","webpack://wp-webpack-workflow/webpack/runtime/make namespace object","webpack://wp-webpack-workflow/./src/js/acf-blocks/block-faqs.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import '../../scss/acf-blocks/block-faqs.scss';\n\nconst initFaqs = () => {\n    const faq = document.querySelector('.js-faq');\n    if (faq) {\n        console.log(faq);\n        faq.addEventListener('click', (event) => {\n            const question = event.target.closest('.js-faq-question');\n            if (!question) return;\n            const answer = question.nextElementSibling;\n            // hide previously opened answer and show the clicked answer\n            const currentAnswer = faq.querySelector(\n                '.js-faq-answer[aria-hidden=\"false\"]'\n            );\n            if (currentAnswer === answer) {\n                // close the already open answer\n                answer.setAttribute('aria-hidden', 'true');\n                answer.parentNode.classList.remove('faq__item--expanded');\n                question.setAttribute('aria-expanded', 'false');\n            } else {\n                // hide previously open answer and show the clicked answer\n                if (currentAnswer) {\n                    currentAnswer.setAttribute('aria-hidden', 'true');\n                    currentAnswer.parentNode.classList.remove(\n                        'faq__item--expanded'\n                    );\n                    currentAnswer.previousElementSibling.setAttribute(\n                        'aria-expanded',\n                        'false'\n                    );\n                }\n                answer.setAttribute('aria-hidden', 'false');\n                answer.parentNode.classList.add('faq__item--expanded');\n                question.setAttribute('aria-expanded', 'true');\n            }\n        });\n    }\n};\n\ndocument.defaultView.addEventListener('DOMContentLoaded', initFaqs, false);\n\n// Initialize dynamic block preview (editor).\nif (window.acf) {\n    window.acf.addAction('render_block_preview', initFaqs);\n}\n"],"names":[],"sourceRoot":""}